# {{ ansible_managed }}

server {
  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) -%}
  listen 443 ssl http2;
  {% else -%}
  listen 80;
  {% endif %}

  server_name  {% for host in site_hosts_canonical %}{{ host }} {% if item.value.multisite.subdomains | default(false) %}*.{{ host }} {% endif %}{% endfor %};
  access_log   {{ www_root }}/{{ item.key }}/logs/access.log;
  error_log    {{ www_root }}/{{ item.key }}/logs/error.log;

  root  {{ www_root }}/{{ item.key }}/{{ item.value.current_path | default('current') }}/web;
  index index.php index.htm index.html;

  charset utf-8;

  {% if env == 'development' -%}
  # See Virtualbox section at http://wiki.nginx.org/Pitfalls
  sendfile off;
  {%- endif %}

   add_header Fastcgi-Cache $upstream_cache_status;

  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) -%}
    {{ lookup('template', 'https.conf.j2') }}
  {% endif %}

  {% if item.value.ssl is not defined or not item.value.ssl.enabled | default(false) -%}
    include acme-challenge-location.conf;
  {% endif %}

  include includes.d/{{ item.key }}/*.conf;
 
 # Deny access to any files with a .php extension in the uploads directory
        location ~* /(?:uploads|files)/.*\.php$ {
                deny all;
        }
 
        location / {
                index index.php index.html index.htm;
                try_files $uri $uri/ /index.php?$args;
        }
 
        location ~* \.(gif|jpg|jpeg|png|css|js)$ {
                expires max;
        }
 
        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_index index.php;
                fastcgi_pass  unix:/var/run/php-fpm/magento.sock;
                fastcgi_param   SCRIPT_FILENAME
                                $document_root$fastcgi_script_name;
                include       fastcgi_params;
        }
}

{% if item.value.ssl is defined and item.value.ssl.enabled | default(false) %}
server {
  listen 80;

  server_name {{ site_hosts | join(' ') }}{% if item.value.multisite.subdomains | default(false) %} *.{{ site_hosts_canonical | join(' *.') }}{% endif %};

  {% if item.value.ssl.provider | default('manual') == 'letsencrypt' -%}
  include acme-challenge-location.conf;

  location / {
    return 301 https://$host$request_uri;
  }
  {% else %}
  return 301 https://$host$request_uri;
  {% endif -%}
}
{% endif %}

{% for host in item.value.site_hosts if host.redirects | default([]) %}
server {
  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) -%}
    listen 443 ssl http2;

    {{ lookup('template', 'https.conf.j2') }}
  {% else -%}
    listen 80;
  {% endif -%}

  server_name {{ host.redirects | join(' ') }};

  {% if item.value.ssl is not defined or not item.value.ssl.enabled | default(false) -%}
    include acme-challenge-location.conf;

    location / {
      return 301 $scheme://{{ host.canonical }}$request_uri;
    }
  {% else %}
    return 301 $scheme://{{ host.canonical }}$request_uri;
  {% endif %}
}
{% endfor %}
